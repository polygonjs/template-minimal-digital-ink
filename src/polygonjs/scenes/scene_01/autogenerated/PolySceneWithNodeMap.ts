import { ParamValueSerializedTypeMap } from "@polygonjs/polygonjs/dist/src/engine/params/types/ParamValueSerializedTypeMap";

import { PolyScene } from "@polygonjs/polygonjs/dist/src/engine/scene/PolyScene";
// obj
import { GeoObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/Geo";
// sop
import { ActorSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Actor";
import { AnimationsNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/AnimationsNetwork";
import { BoxSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Box";
import { CameraControlsSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/CameraControls";
import { CopNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/CopNetwork";
import { EventsNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/EventsNetwork";
import { MaterialSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Material";
import { MaterialsNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/MaterialsNetwork";
import { MergeSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Merge";
import { PerspectiveCameraSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/PerspectiveCamera";
import { PolarTransformSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/PolarTransform";
import { SpotLightSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/SpotLight";
// event
import { AnimationEventNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/event/Animation";
import { CameraOrbitControlsEventNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/event/CameraOrbitControls";
import { SceneEventNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/event/Scene";
// mat
import { RayMarchingBuilderMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/RayMarchingBuilder";
// cop
import { ImageEXRCopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/cop/ImageEXR";
// actor
import { OnTickActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/OnTick";
import { PlaneActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/Plane";
import { RayFromCursorActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/RayFromCursor";
import { RayIntersectPlaneActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/RayIntersectPlane";
import { SetMaterialUniformActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/SetMaterialUniform";
// anim
import { DurationAnimNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/anim/Duration";
import { EasingAnimNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/anim/Easing";
import { NullAnimNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/anim/Null";
import { PlayAnimNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/anim/Play";
import { PropertyNameAnimNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/anim/PropertyName";
import { PropertyValueAnimNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/anim/PropertyValue";
import { TargetAnimNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/anim/Target";

export class PolySceneWithNodeMap_scene_01 extends PolyScene {
  node(path: "/cameras"): GeoObjNode;
  node(path: "/cameras/perspectiveCamera_MAIN"): PerspectiveCameraSopNode;
  node(path: "/cameras/perspectiveCamera_DEBUG"): PerspectiveCameraSopNode;
  node(path: "/cameras/merge1"): MergeSopNode;
  node(path: "/cameras/cameraControls1"): CameraControlsSopNode;
  node(
    path: "/cameras/cameraControls1/cameraOrbitControls1"
  ): CameraOrbitControlsEventNode;
  node(path: "/lights"): GeoObjNode;
  node(path: "/lights/spotLight1"): SpotLightSopNode;
  node(path: "/lights/polarTransform1"): PolarTransformSopNode;
  node(path: "/ink"): GeoObjNode;
  node(path: "/ink/material3"): MaterialSopNode;
  node(path: "/ink/box1"): BoxSopNode;
  node(path: "/ink/MAT"): MaterialsNetworkSopNode;
  node(path: "/ink/MAT/rayMarchingBuilder1"): RayMarchingBuilderMatNode;
  node(path: "/ink/COP"): CopNetworkSopNode;
  node(path: "/ink/COP/imageEXR_envMap"): ImageEXRCopNode;
  node(path: "/ink/actor1"): ActorSopNode;
  node(path: "/ink/actor1/onTick1"): OnTickActorNode;
  node(path: "/ink/actor1/rayFromCursor1"): RayFromCursorActorNode;
  node(path: "/ink/actor1/rayIntersectPlane1"): RayIntersectPlaneActorNode;
  node(path: "/ink/actor1/plane1"): PlaneActorNode;
  node(path: "/ink/actor1/setMaterialUniform1"): SetMaterialUniformActorNode;
  node(path: "/ink/actor1/setMaterialUniform2"): SetMaterialUniformActorNode;
  node(path: "/ink/actor1/setMaterialUniform3"): SetMaterialUniformActorNode;
  node(path: "/ink/ANIM"): AnimationsNetworkSopNode;
  node(path: "/ink/ANIM/duration1"): DurationAnimNode;
  node(path: "/ink/ANIM/easing1"): EasingAnimNode;
  node(path: "/ink/ANIM/target1"): TargetAnimNode;
  node(path: "/ink/ANIM/propertyName1"): PropertyNameAnimNode;
  node(path: "/ink/ANIM/propertyValue1"): PropertyValueAnimNode;
  node(path: "/ink/ANIM/propertyValue2"): PropertyValueAnimNode;
  node(path: "/ink/ANIM/PLAY"): NullAnimNode;
  node(path: "/ink/ANIM/RESET"): NullAnimNode;
  node(path: "/ink/ANIM/CONTROLS"): PlayAnimNode;
  node(path: "/ink/eventsNetwork1"): EventsNetworkSopNode;
  node(path: "/ink/eventsNetwork1/scene1"): SceneEventNode;
  node(path: "/ink/eventsNetwork1/animation1"): AnimationEventNode;
  node(
    path: string
  ): any /* we need any for now as otherwise an error occurs when adding plugins to the overloaded methods */ {
    return super.node(path);
  }
}

export interface PolySceneProps_scene_01 {
  "cameras--transform"?: ParamValueSerializedTypeMap["folder"];
  "cameras--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "cameras--t"?: ParamValueSerializedTypeMap["vector3"];
  "cameras--t-tx"?: ParamValueSerializedTypeMap["float"];
  "cameras--t-ty"?: ParamValueSerializedTypeMap["float"];
  "cameras--t-tz"?: ParamValueSerializedTypeMap["float"];
  "cameras--tx"?: ParamValueSerializedTypeMap["float"];
  "cameras--ty"?: ParamValueSerializedTypeMap["float"];
  "cameras--tz"?: ParamValueSerializedTypeMap["float"];
  "cameras--r"?: ParamValueSerializedTypeMap["vector3"];
  "cameras--r-rx"?: ParamValueSerializedTypeMap["float"];
  "cameras--r-ry"?: ParamValueSerializedTypeMap["float"];
  "cameras--r-rz"?: ParamValueSerializedTypeMap["float"];
  "cameras--rx"?: ParamValueSerializedTypeMap["float"];
  "cameras--ry"?: ParamValueSerializedTypeMap["float"];
  "cameras--rz"?: ParamValueSerializedTypeMap["float"];
  "cameras--s"?: ParamValueSerializedTypeMap["vector3"];
  "cameras--s-sx"?: ParamValueSerializedTypeMap["float"];
  "cameras--s-sy"?: ParamValueSerializedTypeMap["float"];
  "cameras--s-sz"?: ParamValueSerializedTypeMap["float"];
  "cameras--sx"?: ParamValueSerializedTypeMap["float"];
  "cameras--sy"?: ParamValueSerializedTypeMap["float"];
  "cameras--sz"?: ParamValueSerializedTypeMap["float"];
  "cameras--scale"?: ParamValueSerializedTypeMap["float"];
  "cameras--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "cameras--display"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "cameras-perspectiveCamera_MAIN--fov"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--near"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--far"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--position"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera_MAIN--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--rotation"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera_MAIN--rotation-rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--rotation-rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--rotation-rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera_MAIN--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera_MAIN--name"?: ParamValueSerializedTypeMap["string"];
  "cameras-perspectiveCamera_MAIN--setMainCamera"?: ParamValueSerializedTypeMap["button"];
  "cameras-perspectiveCamera_DEBUG--fov"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--near"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--far"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--position"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera_DEBUG--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotation"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera_DEBUG--rotation-rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotation-rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotation-rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera_DEBUG--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera_DEBUG--name"?: ParamValueSerializedTypeMap["string"];
  "cameras-perspectiveCamera_DEBUG--setMainCamera"?: ParamValueSerializedTypeMap["button"];
  "cameras-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1--node"?: ParamValueSerializedTypeMap["node_path"];
  "cameras-cameraControls1-cameraOrbitControls1--enabled"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--allowPan"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--allowRotate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--allowZoom"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--tdamping"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--damping"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--screenSpacePanning"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--rotateSpeed"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--minDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--maxDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--limitAzimuthAngle"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRange-polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRange-polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--target"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-cameraControls1-cameraOrbitControls1--target-targetx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--target-targety"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--target-targetz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--targetx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--targety"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--targetz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--enableKeys"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--keysMode"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--keysPanSpeed"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--keysRotateSpeedVertical"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--keysRotateSpeedHorizontal"?: ParamValueSerializedTypeMap["float"];
  "lights--transform"?: ParamValueSerializedTypeMap["folder"];
  "lights--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "lights--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "lights--t"?: ParamValueSerializedTypeMap["vector3"];
  "lights--t-tx"?: ParamValueSerializedTypeMap["float"];
  "lights--t-ty"?: ParamValueSerializedTypeMap["float"];
  "lights--t-tz"?: ParamValueSerializedTypeMap["float"];
  "lights--tx"?: ParamValueSerializedTypeMap["float"];
  "lights--ty"?: ParamValueSerializedTypeMap["float"];
  "lights--tz"?: ParamValueSerializedTypeMap["float"];
  "lights--r"?: ParamValueSerializedTypeMap["vector3"];
  "lights--r-rx"?: ParamValueSerializedTypeMap["float"];
  "lights--r-ry"?: ParamValueSerializedTypeMap["float"];
  "lights--r-rz"?: ParamValueSerializedTypeMap["float"];
  "lights--rx"?: ParamValueSerializedTypeMap["float"];
  "lights--ry"?: ParamValueSerializedTypeMap["float"];
  "lights--rz"?: ParamValueSerializedTypeMap["float"];
  "lights--s"?: ParamValueSerializedTypeMap["vector3"];
  "lights--s-sx"?: ParamValueSerializedTypeMap["float"];
  "lights--s-sy"?: ParamValueSerializedTypeMap["float"];
  "lights--s-sz"?: ParamValueSerializedTypeMap["float"];
  "lights--sx"?: ParamValueSerializedTypeMap["float"];
  "lights--sy"?: ParamValueSerializedTypeMap["float"];
  "lights--sz"?: ParamValueSerializedTypeMap["float"];
  "lights--scale"?: ParamValueSerializedTypeMap["float"];
  "lights--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "lights--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "lights--display"?: ParamValueSerializedTypeMap["boolean"];
  "lights--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "lights-spotLight1--light"?: ParamValueSerializedTypeMap["folder"];
  "lights-spotLight1--color"?: ParamValueSerializedTypeMap["color"];
  "lights-spotLight1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--colorr"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--colorg"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--colorb"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--intensity"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--angle"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--penumbra"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--decay"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--distance"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "lights-spotLight1--helperSize"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--name"?: ParamValueSerializedTypeMap["string"];
  "lights-spotLight1--shadow"?: ParamValueSerializedTypeMap["folder"];
  "lights-spotLight1--castShadow"?: ParamValueSerializedTypeMap["boolean"];
  "lights-spotLight1--shadowAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "lights-spotLight1--shadowUpdateOnNextRender"?: ParamValueSerializedTypeMap["boolean"];
  "lights-spotLight1--shadowRes"?: ParamValueSerializedTypeMap["vector2"];
  "lights-spotLight1--shadowRes-shadowResx"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowRes-shadowResy"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowResx"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowResy"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowBias"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowNear"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowFar"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowRadius"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--volumetric"?: ParamValueSerializedTypeMap["folder"];
  "lights-spotLight1--tvolumetric"?: ParamValueSerializedTypeMap["boolean"];
  "lights-spotLight1--volAttenuation"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--volAnglePower"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "lights-polarTransform1--center"?: ParamValueSerializedTypeMap["vector3"];
  "lights-polarTransform1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--centerx"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--centery"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--centerz"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--longitude"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--latitude"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--depth"?: ParamValueSerializedTypeMap["float"];
  "ink--transform"?: ParamValueSerializedTypeMap["folder"];
  "ink--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "ink--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "ink--t"?: ParamValueSerializedTypeMap["vector3"];
  "ink--t-tx"?: ParamValueSerializedTypeMap["float"];
  "ink--t-ty"?: ParamValueSerializedTypeMap["float"];
  "ink--t-tz"?: ParamValueSerializedTypeMap["float"];
  "ink--tx"?: ParamValueSerializedTypeMap["float"];
  "ink--ty"?: ParamValueSerializedTypeMap["float"];
  "ink--tz"?: ParamValueSerializedTypeMap["float"];
  "ink--r"?: ParamValueSerializedTypeMap["vector3"];
  "ink--r-rx"?: ParamValueSerializedTypeMap["float"];
  "ink--r-ry"?: ParamValueSerializedTypeMap["float"];
  "ink--r-rz"?: ParamValueSerializedTypeMap["float"];
  "ink--rx"?: ParamValueSerializedTypeMap["float"];
  "ink--ry"?: ParamValueSerializedTypeMap["float"];
  "ink--rz"?: ParamValueSerializedTypeMap["float"];
  "ink--s"?: ParamValueSerializedTypeMap["vector3"];
  "ink--s-sx"?: ParamValueSerializedTypeMap["float"];
  "ink--s-sy"?: ParamValueSerializedTypeMap["float"];
  "ink--s-sz"?: ParamValueSerializedTypeMap["float"];
  "ink--sx"?: ParamValueSerializedTypeMap["float"];
  "ink--sy"?: ParamValueSerializedTypeMap["float"];
  "ink--sz"?: ParamValueSerializedTypeMap["float"];
  "ink--scale"?: ParamValueSerializedTypeMap["float"];
  "ink--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "ink--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "ink--display"?: ParamValueSerializedTypeMap["boolean"];
  "ink--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "ink-material3--group"?: ParamValueSerializedTypeMap["string"];
  "ink-material3--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "ink-material3--material"?: ParamValueSerializedTypeMap["node_path"];
  "ink-material3--applyToChildren"?: ParamValueSerializedTypeMap["boolean"];
  "ink-material3--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "ink-material3--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "ink-material3--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "ink-material3--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "ink-material3--texDest0"?: ParamValueSerializedTypeMap["string"];
  "ink-box1--size"?: ParamValueSerializedTypeMap["float"];
  "ink-box1--sizes"?: ParamValueSerializedTypeMap["vector3"];
  "ink-box1--sizes-sizesx"?: ParamValueSerializedTypeMap["float"];
  "ink-box1--sizes-sizesy"?: ParamValueSerializedTypeMap["float"];
  "ink-box1--sizes-sizesz"?: ParamValueSerializedTypeMap["float"];
  "ink-box1--sizesx"?: ParamValueSerializedTypeMap["float"];
  "ink-box1--sizesy"?: ParamValueSerializedTypeMap["float"];
  "ink-box1--sizesz"?: ParamValueSerializedTypeMap["float"];
  "ink-box1--divisions"?: ParamValueSerializedTypeMap["integer"];
  "ink-box1--center"?: ParamValueSerializedTypeMap["vector3"];
  "ink-box1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "ink-box1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "ink-box1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "ink-box1--centerx"?: ParamValueSerializedTypeMap["float"];
  "ink-box1--centery"?: ParamValueSerializedTypeMap["float"];
  "ink-box1--centerz"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--default"?: ParamValueSerializedTypeMap["folder"];
  "ink-MAT-rayMarchingBuilder1--maxSteps"?: ParamValueSerializedTypeMap["integer"];
  "ink-MAT-rayMarchingBuilder1--maxDist"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--surfDist"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--normalsBias"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--center"?: ParamValueSerializedTypeMap["vector3"];
  "ink-MAT-rayMarchingBuilder1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--centerx"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--centery"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--centerz"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--advanced"?: ParamValueSerializedTypeMap["folder"];
  "ink-MAT-rayMarchingBuilder1--setBuilderNode"?: ParamValueSerializedTypeMap["boolean"];
  "ink-MAT-rayMarchingBuilder1--builderNode"?: ParamValueSerializedTypeMap["node_path"];
  "ink-MAT-rayMarchingBuilder1--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "ink-MAT-rayMarchingBuilder1--front"?: ParamValueSerializedTypeMap["boolean"];
  "ink-MAT-rayMarchingBuilder1--envTexture1"?: ParamValueSerializedTypeMap["node_path"];
  "ink-MAT-rayMarchingBuilder1--pos1"?: ParamValueSerializedTypeMap["vector3"];
  "ink-MAT-rayMarchingBuilder1--pos1-pos1x"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--pos1-pos1y"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--pos1-pos1z"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--pos1x"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--pos1y"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--pos1z"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--pos2"?: ParamValueSerializedTypeMap["vector3"];
  "ink-MAT-rayMarchingBuilder1--pos2-pos2x"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--pos2-pos2y"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--pos2-pos2z"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--pos2x"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--pos2y"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--pos2z"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--pos3"?: ParamValueSerializedTypeMap["vector3"];
  "ink-MAT-rayMarchingBuilder1--pos3-pos3x"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--pos3-pos3y"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--pos3-pos3z"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--pos3x"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--pos3y"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--pos3z"?: ParamValueSerializedTypeMap["float"];
  "ink-MAT-rayMarchingBuilder1--radiusMult"?: ParamValueSerializedTypeMap["float"];
  "ink-COP-imageEXR_envMap--url"?: ParamValueSerializedTypeMap["string"];
  "ink-COP-imageEXR_envMap--reload"?: ParamValueSerializedTypeMap["button"];
  "ink-COP-imageEXR_envMap--tencoding"?: ParamValueSerializedTypeMap["boolean"];
  "ink-COP-imageEXR_envMap--encoding"?: ParamValueSerializedTypeMap["integer"];
  "ink-COP-imageEXR_envMap--tmapping"?: ParamValueSerializedTypeMap["boolean"];
  "ink-COP-imageEXR_envMap--mapping"?: ParamValueSerializedTypeMap["integer"];
  "ink-COP-imageEXR_envMap--twrap"?: ParamValueSerializedTypeMap["boolean"];
  "ink-COP-imageEXR_envMap--wrapS"?: ParamValueSerializedTypeMap["integer"];
  "ink-COP-imageEXR_envMap--wrapT"?: ParamValueSerializedTypeMap["integer"];
  "ink-COP-imageEXR_envMap--tminFilter"?: ParamValueSerializedTypeMap["boolean"];
  "ink-COP-imageEXR_envMap--minFilter"?: ParamValueSerializedTypeMap["integer"];
  "ink-COP-imageEXR_envMap--tmagFilter"?: ParamValueSerializedTypeMap["boolean"];
  "ink-COP-imageEXR_envMap--magFilter"?: ParamValueSerializedTypeMap["integer"];
  "ink-COP-imageEXR_envMap--tanisotropy"?: ParamValueSerializedTypeMap["boolean"];
  "ink-COP-imageEXR_envMap--useRendererMaxAnisotropy"?: ParamValueSerializedTypeMap["boolean"];
  "ink-COP-imageEXR_envMap--anisotropy"?: ParamValueSerializedTypeMap["integer"];
  "ink-COP-imageEXR_envMap--tflipY"?: ParamValueSerializedTypeMap["boolean"];
  "ink-COP-imageEXR_envMap--flipY"?: ParamValueSerializedTypeMap["boolean"];
  "ink-COP-imageEXR_envMap--ttransform"?: ParamValueSerializedTypeMap["boolean"];
  "ink-COP-imageEXR_envMap--offset"?: ParamValueSerializedTypeMap["vector2"];
  "ink-COP-imageEXR_envMap--offset-offsetx"?: ParamValueSerializedTypeMap["float"];
  "ink-COP-imageEXR_envMap--offset-offsety"?: ParamValueSerializedTypeMap["float"];
  "ink-COP-imageEXR_envMap--offsetx"?: ParamValueSerializedTypeMap["float"];
  "ink-COP-imageEXR_envMap--offsety"?: ParamValueSerializedTypeMap["float"];
  "ink-COP-imageEXR_envMap--repeat"?: ParamValueSerializedTypeMap["vector2"];
  "ink-COP-imageEXR_envMap--repeat-repeatx"?: ParamValueSerializedTypeMap["float"];
  "ink-COP-imageEXR_envMap--repeat-repeaty"?: ParamValueSerializedTypeMap["float"];
  "ink-COP-imageEXR_envMap--repeatx"?: ParamValueSerializedTypeMap["float"];
  "ink-COP-imageEXR_envMap--repeaty"?: ParamValueSerializedTypeMap["float"];
  "ink-COP-imageEXR_envMap--rotation"?: ParamValueSerializedTypeMap["float"];
  "ink-COP-imageEXR_envMap--center"?: ParamValueSerializedTypeMap["vector2"];
  "ink-COP-imageEXR_envMap--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "ink-COP-imageEXR_envMap--center-centery"?: ParamValueSerializedTypeMap["float"];
  "ink-COP-imageEXR_envMap--centerx"?: ParamValueSerializedTypeMap["float"];
  "ink-COP-imageEXR_envMap--centery"?: ParamValueSerializedTypeMap["float"];
  "ink-COP-imageEXR_envMap--tadvanced"?: ParamValueSerializedTypeMap["boolean"];
  "ink-COP-imageEXR_envMap--tformat"?: ParamValueSerializedTypeMap["boolean"];
  "ink-COP-imageEXR_envMap--format"?: ParamValueSerializedTypeMap["integer"];
  "ink-COP-imageEXR_envMap--ttype"?: ParamValueSerializedTypeMap["boolean"];
  "ink-COP-imageEXR_envMap--type"?: ParamValueSerializedTypeMap["integer"];
  "ink-COP-imageEXR_envMap--checkFileType"?: ParamValueSerializedTypeMap["boolean"];
  "ink-actor1--useThisNode"?: ParamValueSerializedTypeMap["boolean"];
  "ink-actor1--node"?: ParamValueSerializedTypeMap["node_path"];
  "ink-actor1-rayFromCursor1--element"?: ParamValueSerializedTypeMap["integer"];
  "ink-actor1-plane1--normal"?: ParamValueSerializedTypeMap["vector3"];
  "ink-actor1-plane1--normal-normalx"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-plane1--normal-normaly"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-plane1--normal-normalz"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-plane1--normalx"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-plane1--normaly"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-plane1--normalz"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-plane1--constant"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-setMaterialUniform1--addPrefix"?: ParamValueSerializedTypeMap["boolean"];
  "ink-actor1-setMaterialUniform1--type"?: ParamValueSerializedTypeMap["integer"];
  "ink-actor1-setMaterialUniform1--Vector3"?: ParamValueSerializedTypeMap["vector3"];
  "ink-actor1-setMaterialUniform1--Vector3-Vector3x"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-setMaterialUniform1--Vector3-Vector3y"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-setMaterialUniform1--Vector3-Vector3z"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-setMaterialUniform1--Vector3x"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-setMaterialUniform1--Vector3y"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-setMaterialUniform1--Vector3z"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-setMaterialUniform1--uniformName"?: ParamValueSerializedTypeMap["string"];
  "ink-actor1-setMaterialUniform1--lerp"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-setMaterialUniform2--addPrefix"?: ParamValueSerializedTypeMap["boolean"];
  "ink-actor1-setMaterialUniform2--type"?: ParamValueSerializedTypeMap["integer"];
  "ink-actor1-setMaterialUniform2--Vector3"?: ParamValueSerializedTypeMap["vector3"];
  "ink-actor1-setMaterialUniform2--Vector3-Vector3x"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-setMaterialUniform2--Vector3-Vector3y"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-setMaterialUniform2--Vector3-Vector3z"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-setMaterialUniform2--Vector3x"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-setMaterialUniform2--Vector3y"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-setMaterialUniform2--Vector3z"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-setMaterialUniform2--uniformName"?: ParamValueSerializedTypeMap["string"];
  "ink-actor1-setMaterialUniform2--lerp"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-setMaterialUniform3--addPrefix"?: ParamValueSerializedTypeMap["boolean"];
  "ink-actor1-setMaterialUniform3--type"?: ParamValueSerializedTypeMap["integer"];
  "ink-actor1-setMaterialUniform3--Vector3"?: ParamValueSerializedTypeMap["vector3"];
  "ink-actor1-setMaterialUniform3--Vector3-Vector3x"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-setMaterialUniform3--Vector3-Vector3y"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-setMaterialUniform3--Vector3-Vector3z"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-setMaterialUniform3--Vector3x"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-setMaterialUniform3--Vector3y"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-setMaterialUniform3--Vector3z"?: ParamValueSerializedTypeMap["float"];
  "ink-actor1-setMaterialUniform3--uniformName"?: ParamValueSerializedTypeMap["string"];
  "ink-actor1-setMaterialUniform3--lerp"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-duration1--duration"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-easing1--name"?: ParamValueSerializedTypeMap["integer"];
  "ink-ANIM-easing1--inOut"?: ParamValueSerializedTypeMap["integer"];
  "ink-ANIM-target1--type"?: ParamValueSerializedTypeMap["integer"];
  "ink-ANIM-target1--nodePath"?: ParamValueSerializedTypeMap["node_path"];
  "ink-ANIM-target1--objectMask"?: ParamValueSerializedTypeMap["string"];
  "ink-ANIM-target1--updateMatrix"?: ParamValueSerializedTypeMap["boolean"];
  "ink-ANIM-target1--printResolve"?: ParamValueSerializedTypeMap["button"];
  "ink-ANIM-propertyName1--name"?: ParamValueSerializedTypeMap["string"];
  "ink-ANIM-propertyValue1--mode"?: ParamValueSerializedTypeMap["integer"];
  "ink-ANIM-propertyValue1--nodePath"?: ParamValueSerializedTypeMap["node_path"];
  "ink-ANIM-propertyValue1--objectMask"?: ParamValueSerializedTypeMap["string"];
  "ink-ANIM-propertyValue1--printResolve"?: ParamValueSerializedTypeMap["button"];
  "ink-ANIM-propertyValue1--overridePropertyName"?: ParamValueSerializedTypeMap["boolean"];
  "ink-ANIM-propertyValue1--propertyName"?: ParamValueSerializedTypeMap["string"];
  "ink-ANIM-propertyValue1--size"?: ParamValueSerializedTypeMap["integer"];
  "ink-ANIM-propertyValue1--value1"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue1--value2"?: ParamValueSerializedTypeMap["vector2"];
  "ink-ANIM-propertyValue1--value2-value2x"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue1--value2-value2y"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue1--value2x"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue1--value2y"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue1--value3"?: ParamValueSerializedTypeMap["vector3"];
  "ink-ANIM-propertyValue1--value3-value3x"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue1--value3-value3y"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue1--value3-value3z"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue1--value3x"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue1--value3y"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue1--value3z"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue1--color"?: ParamValueSerializedTypeMap["color"];
  "ink-ANIM-propertyValue1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue1--colorr"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue1--colorg"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue1--colorb"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue1--value4"?: ParamValueSerializedTypeMap["vector4"];
  "ink-ANIM-propertyValue1--value4-value4x"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue1--value4-value4y"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue1--value4-value4z"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue1--value4-value4w"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue1--value4x"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue1--value4y"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue1--value4z"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue1--value4w"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue1--asColor"?: ParamValueSerializedTypeMap["boolean"];
  "ink-ANIM-propertyValue2--mode"?: ParamValueSerializedTypeMap["integer"];
  "ink-ANIM-propertyValue2--nodePath"?: ParamValueSerializedTypeMap["node_path"];
  "ink-ANIM-propertyValue2--objectMask"?: ParamValueSerializedTypeMap["string"];
  "ink-ANIM-propertyValue2--printResolve"?: ParamValueSerializedTypeMap["button"];
  "ink-ANIM-propertyValue2--overridePropertyName"?: ParamValueSerializedTypeMap["boolean"];
  "ink-ANIM-propertyValue2--propertyName"?: ParamValueSerializedTypeMap["string"];
  "ink-ANIM-propertyValue2--size"?: ParamValueSerializedTypeMap["integer"];
  "ink-ANIM-propertyValue2--value1"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue2--value2"?: ParamValueSerializedTypeMap["vector2"];
  "ink-ANIM-propertyValue2--value2-value2x"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue2--value2-value2y"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue2--value2x"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue2--value2y"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue2--value3"?: ParamValueSerializedTypeMap["vector3"];
  "ink-ANIM-propertyValue2--value3-value3x"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue2--value3-value3y"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue2--value3-value3z"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue2--value3x"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue2--value3y"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue2--value3z"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue2--color"?: ParamValueSerializedTypeMap["color"];
  "ink-ANIM-propertyValue2--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue2--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue2--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue2--colorr"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue2--colorg"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue2--colorb"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue2--value4"?: ParamValueSerializedTypeMap["vector4"];
  "ink-ANIM-propertyValue2--value4-value4x"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue2--value4-value4y"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue2--value4-value4z"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue2--value4-value4w"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue2--value4x"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue2--value4y"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue2--value4z"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue2--value4w"?: ParamValueSerializedTypeMap["float"];
  "ink-ANIM-propertyValue2--asColor"?: ParamValueSerializedTypeMap["boolean"];
  "ink-ANIM-PLAY--play"?: ParamValueSerializedTypeMap["button"];
  "ink-ANIM-PLAY--pause"?: ParamValueSerializedTypeMap["button"];
  "ink-ANIM-PLAY--stoppable"?: ParamValueSerializedTypeMap["boolean"];
  "ink-ANIM-PLAY--debug"?: ParamValueSerializedTypeMap["boolean"];
  "ink-ANIM-RESET--play"?: ParamValueSerializedTypeMap["button"];
  "ink-ANIM-RESET--pause"?: ParamValueSerializedTypeMap["button"];
  "ink-ANIM-RESET--stoppable"?: ParamValueSerializedTypeMap["boolean"];
  "ink-ANIM-RESET--debug"?: ParamValueSerializedTypeMap["boolean"];
  "ink-ANIM-CONTROLS--play"?: ParamValueSerializedTypeMap["button"];
  "ink-ANIM-CONTROLS--pause"?: ParamValueSerializedTypeMap["button"];
  "ink-ANIM-CONTROLS--reset"?: ParamValueSerializedTypeMap["button"];
  "ink-ANIM-CONTROLS--stoppable"?: ParamValueSerializedTypeMap["boolean"];
  "ink-ANIM-CONTROLS--debug"?: ParamValueSerializedTypeMap["boolean"];
  "ink-ANIM-CONTROLS--seek"?: ParamValueSerializedTypeMap["float"];
  "ink-eventsNetwork1-scene1--active"?: ParamValueSerializedTypeMap["boolean"];
  "ink-eventsNetwork1-scene1--element"?: ParamValueSerializedTypeMap["integer"];
  "ink-eventsNetwork1-scene1--created"?: ParamValueSerializedTypeMap["boolean"];
  "ink-eventsNetwork1-scene1--ready"?: ParamValueSerializedTypeMap["boolean"];
  "ink-eventsNetwork1-scene1--play"?: ParamValueSerializedTypeMap["boolean"];
  "ink-eventsNetwork1-scene1--pause"?: ParamValueSerializedTypeMap["boolean"];
  "ink-eventsNetwork1-scene1--tick"?: ParamValueSerializedTypeMap["boolean"];
  "ink-eventsNetwork1-scene1--treachedTime"?: ParamValueSerializedTypeMap["boolean"];
  "ink-eventsNetwork1-scene1--reachedTime"?: ParamValueSerializedTypeMap["float"];
  "ink-eventsNetwork1-scene1--setFrameValue"?: ParamValueSerializedTypeMap["integer"];
  "ink-eventsNetwork1-scene1--setFrame"?: ParamValueSerializedTypeMap["button"];
  "ink-eventsNetwork1-animation1--animation"?: ParamValueSerializedTypeMap["node_path"];
  "ink-eventsNetwork1-animation1--play"?: ParamValueSerializedTypeMap["button"];
  "ink-eventsNetwork1-animation1--pause"?: ParamValueSerializedTypeMap["button"];
  "ink-eventsNetwork1-animation1--stopsPreviousAnim"?: ParamValueSerializedTypeMap["boolean"];
}
